version: '3.5'
services:
#  api1: &app
#    image: a11pl3z:0.0.1-SNAPSHOT
#    networks:
#      - payment-processor
#      - backend
#    hostname: api1
#    depends_on:
#      db:
#        condition: service_healthy
#    ports:
#      - "9081:8080"
#    environment:
#      - DB_HIKARI_MAXIMUN_POOL_SIZE=15
#      - DB_URL=jdbc:postgresql://db:5433/postgres
#      - DB_USER=user
#      - DB_PASSWORD=rinha-de-bK
#      - DB_HIKARI_MAXIMUN_POOL_SIZE=10
#      - SPRING_LOG_LEVEL=info
#      - PROCESSOR_DEFAULT_URL=http://payment-processor-default:8080
#      - PROCESSOR_FALLBACK_URL=http://payment-processor-fallback:8080
#    deploy:
#      resources:
#        limits:
#          cpus: '0.325'
#          memory: "90MB"
#
#  api2: # API - Inst√¢ncia 02
#    <<: *app
#    ports:
#      - "9082:8080"
#    hostname: api2

  db:
    networks:
      - backend
    image: postgres:17.5-alpine3.22
    hostname: db
    environment:
      - POSTGRES_PASSWORD=rinha-de-bK
      - POSTGRES_USER=user
      - POSTGRES_DB=postgres
      - PGPORT=5433
    ports:
      - "55433:5433"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.6'
          memory: '300MB'

#  haproxy:
#    networks:
#      - backend
#    image: haproxy:2.9.4
#    volumes:
#      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
#    depends_on:
#      - api1
#      - api2
#    ports:
#      - "9999:9999"
#    deploy:
#      resources:
#        limits:
#          cpus: "0.25"
#          memory: "70MB"

networks:
  payment-processor:
    external: true
  backend:
    driver: bridge